{"ast":null,"code":"import _asyncToGenerator from \"/Users/guilhermeytalo/Dev/angular/openCompany/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\nimport { ApiService } from './services/api.service';\ndescribe('AppComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [AppComponent, ReactiveFormsModule, HttpClientModule, NgbModule],\n      providers: [ApiService]\n    }).compileComponents();\n    fixture = TestBed.createComponent(AppComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should reset the form when changeStatusToForm() is called', () => {\n    component.changeStatusToForm();\n    expect(component.registerForm.pristine).toBe(true);\n    expect(component.registerForm.untouched).toBe(true);\n  });\n  it('should update the form when editPedido() is called', () => {\n    const solicitante = {\n      ds_responsavel: 'John Doe',\n      nu_cpf: '12345678901',\n      date_nascimento: '1980-01-01'\n    };\n    const endereco = {\n      co_cep: 14022094,\n      ds_logradouro: 'Test Street',\n      co_numero: '123',\n      ds_complemento: 'Apt 1',\n      ds_bairro: 'Test District',\n      ds_municipio: 'Test City',\n      co_uf: '29'\n    };\n    const empresa = {\n      ds_nome_fantasia: 'Test Company',\n      co_entidade_registro: 104306,\n      co_natureza_juridica: 10021,\n      endereco: endereco\n    };\n    const detalhesPedido = {\n      id: 1,\n      solicitante: solicitante,\n      empresa: empresa\n    };\n    component.detalhesPedido = detalhesPedido;\n    component.editPedido();\n    expect(component.registerForm.value.solicitante.ds_responsavel).toBe('John Doe');\n    expect(component.registerForm.value.empresa.ds_nome_fantasia).toBe('Test Company');\n  });\n});","map":{"version":3,"names":["HttpClientModule","TestBed","ReactiveFormsModule","NgbModule","AppComponent","ApiService","describe","component","fixture","beforeEach","_asyncToGenerator","configureTestingModule","imports","providers","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","changeStatusToForm","registerForm","pristine","toBe","untouched","solicitante","ds_responsavel","nu_cpf","date_nascimento","endereco","co_cep","ds_logradouro","co_numero","ds_complemento","ds_bairro","ds_municipio","co_uf","empresa","ds_nome_fantasia","co_entidade_registro","co_natureza_juridica","detalhesPedido","id","editPedido","value"],"sources":["/Users/guilhermeytalo/Dev/angular/openCompany/src/app/app.component.spec.ts"],"sourcesContent":["import { HttpClientModule } from '@angular/common/http';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { ApiService } from './services/api.service';\nimport { Empresa, Endereco, Root, Solicitante } from './types/company';\n\ndescribe('AppComponent', () => {\n  let component: AppComponent;\n  let fixture: ComponentFixture<AppComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AppComponent, ReactiveFormsModule, HttpClientModule, NgbModule],\n      providers: [ApiService],\n    }).compileComponents();\n  \n    fixture = TestBed.createComponent(AppComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should reset the form when changeStatusToForm() is called', () => {\n    component.changeStatusToForm();\n    expect(component.registerForm.pristine).toBe(true);\n    expect(component.registerForm.untouched).toBe(true);\n  });\n\n  it('should update the form when editPedido() is called', () => {\n    const solicitante: Solicitante = {\n      ds_responsavel: 'John Doe',\n      nu_cpf: '12345678901',\n      date_nascimento: '1980-01-01',\n    };\n\n    const endereco: Endereco = {\n      co_cep: 14022094,\n      ds_logradouro: 'Test Street',\n      co_numero: '123',\n      ds_complemento: 'Apt 1',\n      ds_bairro: 'Test District',\n      ds_municipio: 'Test City',\n      co_uf: '29',\n    };\n\n    const empresa: Empresa = {\n      ds_nome_fantasia: 'Test Company',\n      co_entidade_registro: 104306,\n      co_natureza_juridica: 10021,\n      endereco: endereco,\n    };\n\n    const detalhesPedido: Root = {\n      id: 1,\n      solicitante: solicitante,\n      empresa: empresa,\n    };\n\n    component.detalhesPedido = detalhesPedido;\n    component.editPedido();\n\n    expect(component.registerForm.value.solicitante.ds_responsavel).toBe(\n      'John Doe'\n    );\n    expect(component.registerForm.value.empresa.ds_nome_fantasia).toBe(\n      'Test Company'\n    );\n  });\n});"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,sBAAsB;AACvD,SAA2BC,OAAO,QAAQ,uBAAuB;AACjE,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,wBAAwB;AAGnDC,QAAQ,CAAC,cAAc,EAAE,MAAK;EAC5B,IAAIC,SAAuB;EAC3B,IAAIC,OAAuC;EAE3CC,UAAU,eAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMT,OAAO,CAACU,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAACR,YAAY,EAAEF,mBAAmB,EAAEF,gBAAgB,EAAEG,SAAS,CAAC;MACzEU,SAAS,EAAE,CAACR,UAAU;KACvB,CAAC,CAACS,iBAAiB,EAAE;IAEtBN,OAAO,GAAGP,OAAO,CAACc,eAAe,CAACX,YAAY,CAAC;IAC/CG,SAAS,GAAGC,OAAO,CAACQ,iBAAiB;IACrCR,OAAO,CAACS,aAAa,EAAE;EACzB,CAAC,EAAC;EAEFC,EAAE,CAAC,eAAe,EAAE,MAAK;IACvBC,MAAM,CAACZ,SAAS,CAAC,CAACa,UAAU,EAAE;EAChC,CAAC,CAAC;EAEFF,EAAE,CAAC,2DAA2D,EAAE,MAAK;IACnEX,SAAS,CAACc,kBAAkB,EAAE;IAC9BF,MAAM,CAACZ,SAAS,CAACe,YAAY,CAACC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAClDL,MAAM,CAACZ,SAAS,CAACe,YAAY,CAACG,SAAS,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;EACrD,CAAC,CAAC;EAEFN,EAAE,CAAC,oDAAoD,EAAE,MAAK;IAC5D,MAAMQ,WAAW,GAAgB;MAC/BC,cAAc,EAAE,UAAU;MAC1BC,MAAM,EAAE,aAAa;MACrBC,eAAe,EAAE;KAClB;IAED,MAAMC,QAAQ,GAAa;MACzBC,MAAM,EAAE,QAAQ;MAChBC,aAAa,EAAE,aAAa;MAC5BC,SAAS,EAAE,KAAK;MAChBC,cAAc,EAAE,OAAO;MACvBC,SAAS,EAAE,eAAe;MAC1BC,YAAY,EAAE,WAAW;MACzBC,KAAK,EAAE;KACR;IAED,MAAMC,OAAO,GAAY;MACvBC,gBAAgB,EAAE,cAAc;MAChCC,oBAAoB,EAAE,MAAM;MAC5BC,oBAAoB,EAAE,KAAK;MAC3BX,QAAQ,EAAEA;KACX;IAED,MAAMY,cAAc,GAAS;MAC3BC,EAAE,EAAE,CAAC;MACLjB,WAAW,EAAEA,WAAW;MACxBY,OAAO,EAAEA;KACV;IAED/B,SAAS,CAACmC,cAAc,GAAGA,cAAc;IACzCnC,SAAS,CAACqC,UAAU,EAAE;IAEtBzB,MAAM,CAACZ,SAAS,CAACe,YAAY,CAACuB,KAAK,CAACnB,WAAW,CAACC,cAAc,CAAC,CAACH,IAAI,CAClE,UAAU,CACX;IACDL,MAAM,CAACZ,SAAS,CAACe,YAAY,CAACuB,KAAK,CAACP,OAAO,CAACC,gBAAgB,CAAC,CAACf,IAAI,CAChE,cAAc,CACf;EACH,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}