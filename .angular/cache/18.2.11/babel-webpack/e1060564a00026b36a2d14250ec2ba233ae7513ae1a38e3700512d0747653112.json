{"ast":null,"code":"import _asyncToGenerator from \"/Users/guilhermeytalo/Dev/angular/openCompany/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nlet ApiService = class ApiService {\n  http;\n  urlEmpresas = 'http://localhost:3000/empresas';\n  urlEntidadeRegistro = 'http://localhost:3000/entidade-registro';\n  urlEstados = 'https://servicodados.ibge.gov.br/api/v1/localidades/estados';\n  constructor(http) {\n    this.http = http;\n  }\n  getEmpresas() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this.http.get(_this.urlEmpresas));\n    })();\n  }\n  getEntidadeRegistro() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this2.http.get(_this2.urlEntidadeRegistro));\n    })();\n  }\n  getEstados() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this3.http.get(_this3.urlEstados));\n    })();\n  }\n  getBuscarEmpresa(id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this4.http.get(`${_this4.urlEmpresas}/${id}`));\n    })();\n  }\n  createEmpresa(data) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this5.http.post(_this5.urlEmpresas, data));\n    })();\n  }\n  updateEmpresa(id, data) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this6.http.put(`${_this6.urlEmpresas}/${id}`, data));\n    })();\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nApiService = __decorate([Injectable({\n  providedIn: 'root'\n})], ApiService);\nexport { ApiService };","map":{"version":3,"names":["Injectable","HttpClient","firstValueFrom","ApiService","http","urlEmpresas","urlEntidadeRegistro","urlEstados","constructor","getEmpresas","_this","_asyncToGenerator","get","getEntidadeRegistro","_this2","getEstados","_this3","getBuscarEmpresa","id","_this4","createEmpresa","data","_this5","post","updateEmpresa","_this6","put","__decorate","providedIn"],"sources":["/Users/guilhermeytalo/Dev/angular/openCompany/src/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { EntidadeRegistro, Root, Estado } from '../types/company';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private readonly urlEmpresas = 'http://localhost:3000/empresas';\n  private readonly urlEntidadeRegistro =\n    'http://localhost:3000/entidade-registro';\n  private readonly urlEstados =\n    'https://servicodados.ibge.gov.br/api/v1/localidades/estados';\n\n  constructor(private http: HttpClient) {}\n\n  async getEmpresas(): Promise<Root[]> {\n    return firstValueFrom(this.http.get<Root[]>(this.urlEmpresas));\n  }\n\n  async getEntidadeRegistro(): Promise<EntidadeRegistro[]> {\n    return firstValueFrom(\n      this.http.get<EntidadeRegistro[]>(this.urlEntidadeRegistro)\n    );\n  }\n\n  async getEstados(): Promise<Estado[]> {\n    return firstValueFrom(this.http.get<Estado[]>(this.urlEstados));\n  }\n\n  async getBuscarEmpresa(id: number): Promise<Root> {\n    return firstValueFrom(this.http.get<Root>(`${this.urlEmpresas}/${id}`));\n  }\n\n  async createEmpresa(data: Root): Promise<Root> {\n    return firstValueFrom(this.http.post<Root>(this.urlEmpresas, data));\n  }\n\n  async updateEmpresa(id: string | number, data: Root): Promise<Root> {\n    return firstValueFrom(\n      this.http.put<Root>(`${this.urlEmpresas}/${id}`, data)\n    );\n  }\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,cAAc,QAAQ,MAAM;AAK9B,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EAODC,IAAA;EANHC,WAAW,GAAG,gCAAgC;EAC9CC,mBAAmB,GAClC,yCAAyC;EAC1BC,UAAU,GACzB,6DAA6D;EAE/DC,YAAoBJ,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEjCK,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACf,OAAOT,cAAc,CAACQ,KAAI,CAACN,IAAI,CAACQ,GAAG,CAASF,KAAI,CAACL,WAAW,CAAC,CAAC;IAAC;EACjE;EAEMQ,mBAAmBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAH,iBAAA;MACvB,OAAOT,cAAc,CACnBY,MAAI,CAACV,IAAI,CAACQ,GAAG,CAAqBE,MAAI,CAACR,mBAAmB,CAAC,CAC5D;IAAC;EACJ;EAEMS,UAAUA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAL,iBAAA;MACd,OAAOT,cAAc,CAACc,MAAI,CAACZ,IAAI,CAACQ,GAAG,CAAWI,MAAI,CAACT,UAAU,CAAC,CAAC;IAAC;EAClE;EAEMU,gBAAgBA,CAACC,EAAU;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MAC/B,OAAOT,cAAc,CAACiB,MAAI,CAACf,IAAI,CAACQ,GAAG,CAAO,GAAGO,MAAI,CAACd,WAAW,IAAIa,EAAE,EAAE,CAAC,CAAC;IAAC;EAC1E;EAEME,aAAaA,CAACC,IAAU;IAAA,IAAAC,MAAA;IAAA,OAAAX,iBAAA;MAC5B,OAAOT,cAAc,CAACoB,MAAI,CAAClB,IAAI,CAACmB,IAAI,CAAOD,MAAI,CAACjB,WAAW,EAAEgB,IAAI,CAAC,CAAC;IAAC;EACtE;EAEMG,aAAaA,CAACN,EAAmB,EAAEG,IAAU;IAAA,IAAAI,MAAA;IAAA,OAAAd,iBAAA;MACjD,OAAOT,cAAc,CACnBuB,MAAI,CAACrB,IAAI,CAACsB,GAAG,CAAO,GAAGD,MAAI,CAACpB,WAAW,IAAIa,EAAE,EAAE,EAAEG,IAAI,CAAC,CACvD;IAAC;EACJ;;;;;AAnCWlB,UAAU,GAAAwB,UAAA,EAHtB3B,UAAU,CAAC;EACV4B,UAAU,EAAE;CACb,CAAC,C,EACWzB,UAAU,CAoCtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}